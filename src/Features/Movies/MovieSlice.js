import { createSlice } from '@reduxjs/toolkit';
  
  const initialState = {
    list: [],
    filter: 'all',
  };
  
  const moviesSlice = createSlice({
    name: 'movies',
    initialState,
    reducers: {
    addMovie: (state, action) => {
      state.list.push(action.payload);
    },
    updateMovie: (state, action) => {
        const movieToUpdate = state.list.find((movie) => movie.id === action.payload.id);
        if (movieToUpdate) {
            Object.assign(movieToUpdate, action.payload);
        }
    },
    removeMovie: (state, action) => {
      state.list = state.list.filter((movie) => movie.id !== action.payload);
    },
    toggleWatched: (state, action) => {
      const movie = state.list.find((movie) => movie.id === action.payload);
      if (movie) {
        movie.watched = !movie.watched;
      }
      //If movie.watched is true, it becomes false.
      //If movie.watched is false, it becomes true.
    },
    setFilter: (state, action) => {
      state.filter = action.payload;
      // initial is all it switches to the action that comes ex{All , Watched , UnWatched} 
    },
  },
});

export const selectFilteredMovies =(state) =>{
    const movies = state.movies.list
    const filter = state.movies.filter
    // Takes List and Filter from the State

    switch(filter){
        case 'watched':
            return movies.filter((movie)=>movie.watched)
        case 'unwatched':
            return movies.filter(movie => !movie.watched);
        default:
            return movies;
    }
}
// This selector filters movies based on their watched status
// - 'watched': returns only watched movies
// - 'unwatched': returns only unwatched movies
// - 'all': returns all movies (default case)


// Export actions generated by createSlice
export const { addMovie, removeMovie, toggleWatched, setFilter, updateMovie} = moviesSlice.actions;


// Export the reducer to use it in the store
export default moviesSlice.reducer;

